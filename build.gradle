import org.apache.avro.tool.Main

buildscript {
    dependencies {
        classpath 'org.apache.avro:avro-tools:1.10.2'
    }
}

plugins {
    id 'java'
    id "io.freefair.lombok" version "6.0.0-m2"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://packages.confluent.io/maven/'
    }
}

final def generatedAvroSourcesDir = new File(project.getBuildDir(), "/generated/sources/avro/src/java")

sourceSets {
    main {
        java.srcDirs += generatedAvroSourcesDir
    }
}

dependencies {
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.9'
    implementation 'io.confluent:kafka-avro-serializer:6.2.0'
    implementation 'org.apache.avro:avro:1.10.2'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.kafka:kafka-clients:2.7.1'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.springframework:spring-context:5.3.8'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

task generateAvroClasses() {
    doLast {
        String[] args = ["compile",
                         "schema",
                         "src/main/resources/avro/user.avsc",
                         "src/main/resources/avro/Payment.avsc",
                         generatedAvroSourcesDir.getAbsolutePath()
        ]
        def rc = new Main().run(args)
        println("Avro result code: " + rc)
        if (rc != 0) {
            throw new GradleException("Non-zero result code from avro compiler: " + rc)
        }
    }
}

compileJava.dependsOn generateAvroClasses

test {
    useJUnitPlatform()
}
